{"version":3,"sources":["mocks/testData.js","mocks/handlers.js","mocks/browser.js","hooks/useItemsTimeout.js","ChooserTimeout.js","hooks/useItemsFetch.js","ChooserFetch.js","App.js","index.js"],"names":["initialItems","id","text","handlers","rest","get","req","res","ctx","status","json","worker","setupWorker","useItems","useState","items","setItems","useEffect","Promise","rej","window","setTimeout","then","ChooserTimeout","useItemsTimeout","searchTerm","setSearchTerm","value","onChange","e","target","filter","item","selected","map","key","data-testid","match","type","checked","onSelect","htmlFor","useItemsFetch","pending","setPending","error","setError","fetch","resp","catch","finally","ChooserFetch","App","className","start","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5849de69.chunk.js","sourcesContent":["\n\nexport const initialItems = [\n    { id: \"1\", text: \"strawberry\" },\n    { id: \"2\", text: \"pear\" },\n    { id: \"3\", text: \"apple\" },\n    { id: \"4\", text: \"grape\" }\n  ];","import { rest } from \"msw\";\nimport { initialItems } from \"../mocks/testData\";\n\nexport const handlers = [\n  rest.get(\"/api/fruits\", (req, res, ctx) => {\n    return res(ctx.status(200), ctx.json(initialItems));\n  }),\n];\n","import { setupWorker } from 'msw'\nimport { handlers } from './handlers'\n\n// This configures a Service Worker with the given request handlers.\nexport const worker = setupWorker(...handlers)","import { useState, useEffect } from \"react\";\nimport { initialItems } from '../mocks/testData';\n\n\nconst getItems = () => {\n  return new Promise((res, rej) => {\n    window.setTimeout(() => {\n      res(initialItems);\n    }, 500);\n  })\n}\n\nexport default function useItems() {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    getItems()\n    .then(setItems)\n  }, []);\n\n  return {\n    items,\n    setItems\n  };\n}\n","import React, {useState} from \"react\";\nimport useItemsTimeout from \"./hooks/useItemsTimeout\";\n\nconst ChooserTimeout = () => {\n  const { items, setItems } = useItemsTimeout();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const onSelect = (id) => {\n    setItems(\n      items.map((item) => {\n        return item.id === id\n          ? { ...item, selected: !item.selected }\n          : { ...item };\n      })\n    );\n  };\n  const onSearch = (e) => {\n    setSearchTerm(e.target.value);\n  };\n  return (\n    <div>\n      <input id=\"search\" value={searchTerm} onChange={onSearch} />\n      <section>\n        <span>Selected:</span>\n        {items\n          .filter((item) => item.selected)\n          .map((selected) => (\n            <span key={selected.id}>{selected.text}</span>\n          ))}\n      </section>\n      <section data-testid=\"items\">\n        {items\n          .filter((item) => item.text.match(searchTerm))\n          .map(({ id, text, selected = false }) => (\n            <div key={id}>\n              <input\n                id={id}\n                type=\"checkbox\"\n                checked={selected}\n                onChange={() => onSelect(id)}\n              />\n              <label htmlFor={id}>{text}</label>\n            </div>\n          ))}\n      </section>\n    </div>\n  );\n};\nexport default ChooserTimeout;\n","import { useState, useEffect } from \"react\";\n\nexport const URL = \"/api/fruits\";\n\nconst getItems = () => {\n  return window.fetch(URL).then((resp) => resp.json());\n};\n\nexport default function useItemsFetch() {\n  const [items, setItems] = useState([]);\n  const [pending, setPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getItems()\n      .then(setItems)\n      .catch(setError)\n      .finally(() => {\n        setPending(false);\n      });\n  }, []);\n\n  return {\n    items,\n    setItems,\n    error,\n    pending\n  };\n}\n","import React, {useState} from \"react\";\nimport useItemsFetch from \"./hooks/useItemsFetch\";\n\nconst ChooserFetch = () => {\n  const { items, setItems, pending, error } = useItemsFetch();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const onSelect = (id) => {\n    setItems(\n      items.map((item) => {\n        return item.id === id\n          ? { ...item, selected: !item.selected }\n          : { ...item };\n      })\n    );\n  };\n  const onSearch = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  if(pending){\n    return 'loading...';\n  }\n  \n  if(error){\n    return 'Error happened!';\n  }\n\n  return (\n    <div>\n      <input id=\"search\" value={searchTerm} onChange={onSearch} />\n      <section>\n        <span>Selected:</span>\n        {items\n          .filter((item) => item.selected)\n          .map((selected) => (\n            <span key={selected.id}>{selected.text}</span>\n          ))}\n      </section>\n      <section>\n        {items\n          .filter((item) => item.text.match(searchTerm))\n          .map(({ id, text, selected = false }) => (\n            <div key={id}>\n              <input\n                id={id}\n                type=\"checkbox\"\n                checked={selected}\n                onChange={() => onSelect(id)}\n              />\n              <label htmlFor={id}>{text}</label>\n            </div>\n          ))}\n      </section>\n    </div>\n  );\n};\nexport default ChooserFetch;\n","import React from \"react\";\nimport ChooserTimeout from \"./ChooserTimeout\";\nimport ChooserFetch from \"./ChooserFetch\";\nimport \"./styles.css\";\n\nexport default function App() {\n  //  const { items, setItems } = useItemsFetch();\n\n  return (\n    <div className=\"App\">\n      <h1>Cheatsheet</h1>\n        ...\n      \n      <h1>Examples</h1>\n      <h2>Timeout based</h2>\n      <ChooserTimeout />\n\n      <h2>Server response based</h2>\n      <ChooserFetch />\n\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {worker} from './mocks/browser';\nimport App from \"./App\";\n\n// start fake server\nworker.start()\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}